name: Release

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}
      - uses: hmarr/debug-action@v2
      - name: Set git info
        run: |
          git config user.name ${{github.event.head_commit.author.name}}
          git config user.email ${{github.event.head_commit.author.email}}
      - name: get latest tag
        run: |
          #  git fetch --prune --unshallow
          echo "LATEST_TAG=$(git describe --abbrev=0)" >> $GITHUB_ENV
      - name: Version patch
        if: ${{ contains(github.event.head_commit.message, 'patch:') }}
        run: echo "CURRENT_TAG=$(npm version patch)" >> $GITHUB_ENV
      - name: Version minor
        if: ${{ contains(github.event.head_commit.message, 'minor:') }}
        run: echo "CURRENT_TAG=$(npm version minor)" >> $GITHUB_ENV
      - name: Version major
        if: ${{ contains(github.event.head_commit.message, 'major:') }}
        run: echo "CURRENT_TAG=$(npm version major)" >> $GITHUB_ENV
      - name: Version patch when no semantic
        if: ${{ !contains(github.event.head_commit.message, 'patch:') && !contains(github.event.head_commit.message, 'minor:') && !contains(github.event.head_commit.message, 'major:') }}
        run: echo "CURRENT_TAG=$(npm version patch)" >> $GITHUB_ENV
      - run: echo "${{env.LATEST_TAG}}" "${{env.CURRENT_TAG}}"
      # - name: Push new version
      #   run: |
      #     git push --tag
      #     git push
      #     echo "Done!!"
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}
      #     # branch: ${{ github.ref }}
      #     branch: main
      #     tags: true
      # - name: 'Build Changelog'
      #   id: github_release
      #   uses: mikepenz/release-changelog-builder-action@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     configuration: 'config.json'
      # with:
      #   failOnError: 'true'
      #   commitMode: 'true'
      #   fromTag: ${{env.LATEST_TAG}}
      #   toTag: ${{env.CURRENT_TAG}}
      #   token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: github_release
        with:
          from-tag: v3.1.50
          to-tag: v3.1.51
          # from-tag: ${{env.LATEST_TAG}}
          # to-tag: ${{env.CURRENT_TAG}}
      - run: echo "${{ steps.github_release.outputs.changelog }}"
      - run: echo "${{ steps.github_release.outputs.fromTag }}"
      - run: echo "${{ steps.github_release.outputs.toTag }}"
      - run: echo "${{ steps.github_release.outputs.owner }}"
      - run: echo "${{ steps.github_release.outputs.repo }}"
      - run: echo "${{ steps.github_release.outputs.failed }}"
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   with:
      #     tag_name: ${{env.CURRENT_TAG}}
      #     release_name: ${{env.CURRENT_TAG}}
      #     body: ${{steps.github_release.outputs.changelog}}
      #     draft: false
      #     prerelease: false
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}
      #     branch: main
