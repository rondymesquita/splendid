name: Release

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: main
          fetch-depth: 0
      - uses: hmarr/debug-action@v2
      - name: Set git info
        run: |
          git config user.name ${{github.event.head_commit.author.name}}
          git config user.email ${{github.event.head_commit.author.email}}
      - name: get latest tag
        run: |
          #  git fetch --prune --unshallow
          echo "LATEST_TAG=$(git describe --abbrev=0)" >> $GITHUB_ENV
      - name: Version patch
        if: ${{ contains(github.event.head_commit.message, 'patch:') }}
        run: echo "SEM_VERSION=$(npm version patch)" >> $GITHUB_ENV
      - name: Version minor
        if: ${{ contains(github.event.head_commit.message, 'minor:') }}
        run: echo "SEM_VERSION=$(npm version minor)" >> $GITHUB_ENV
      - name: Version major
        if: ${{ contains(github.event.head_commit.message, 'major:') }}
        run: echo "SEM_VERSION=$(npm version major)" >> $GITHUB_ENV
      - name: Version patch when no semantic
        if: ${{ !contains(github.event.head_commit.message, 'patch:') && !contains(github.event.head_commit.message, 'minor:') && !contains(github.event.head_commit.message, 'major:') }}
        run: echo "SEM_VERSION=$(npm version patch)" >> $GITHUB_ENV
      - run: echo "${{env.LATEST_TAG}}" "${{env.SEM_VERSION}}"
      - name: Push new version
        run: |
          git push --tag
